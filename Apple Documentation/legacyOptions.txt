Legacy Customizations:

Overview
In iOS 13 and later, customize your tab bar using the standardAppearance property. You may also continue to use these legacy accessors to customize your tab bar’s appearance directly.
Topics
Setting the bar’s style
var barStyle: UIBarStyle
The tab bar style that specifies its appearance.
enum UIBarStyle
Defines the stylistic appearance of different types of views.
Configuring tab bar items
var tintColor: UIColor!
The tint color to apply to the tab bar items.
Customizing item spacing
var itemPositioning: UITabBar.ItemPositioning
The positioning scheme for the tab bar items in the tab bar.
enum ItemPositioning
Constants that specify tab bar item positioning.
var itemSpacing: CGFloat
The amount of space (in points) to use between tab bar items.
var itemWidth: CGFloat
The width (in points) of tab bar items.
Configuring selection appearance
var unselectedItemTintColor: UIColor?
The tint color to apply to unselected tabs.
var selectionIndicatorImage: UIImage?
The image to use for the selection indicator.
var selectedImageTintColor: UIColor?
The tint color applied to the selected tab bar item.
Deprecated
Changing the background
var barTintColor: UIColor?
The tint color to apply to the tab bar background.
var backgroundImage: UIImage?
The custom background image for the tab bar.
Adding a shadow
var shadowImage: UIImage?
The shadow image to use for the tab bar.
See Also
Customizing tab bar appearance
var standardAppearance: UITabBarAppearance
The appearance settings for a standard-height tab bar.
var scrollEdgeAppearance: UITabBarAppearance?
The appearance settings for the tab bar when the edge of scrollable content aligns with the edge of the tab bar.
var leadingAccessoryView: UIView
The view at the leading edge of a tab bar on tvOS.
var trailingAccessoryView: UIView
The view at the trailing edge of a tab bar on tvOS.
var isTranslucent: Bool
A Boolean value that indicates whether the tab bar is translucent.

Overview
In iOS 13 and later, customize your toolbar using the standardAppearance and compactAppearance properties. You may continue to use these legacy accessors to customize your toolbar’s appearance directly, but you must update the appearance for different bar configurations yourself.
Topics
Setting the bar’s style
var barStyle: UIBarStyle
The toolbar style that specifies its appearance.
enum UIBarStyle
Defines the stylistic appearance of different types of views.
Configuring bar button items
var tintColor: UIColor!
The tint color to apply to the bar button items.
Changing the background
var barTintColor: UIColor?
The tint color to apply to the toolbar background.
func backgroundImage(forToolbarPosition: UIBarPosition, barMetrics: UIBarMetrics) -> UIImage?
Returns the image to use for the background in a given position and with given metrics.
func setBackgroundImage(UIImage?, forToolbarPosition: UIBarPosition, barMetrics: UIBarMetrics)
Sets the image to use for the background in a given position and with given metrics.
Adding a shadow
func shadowImage(forToolbarPosition: UIBarPosition) -> UIImage?
Returns the image to use for the toolbar shadow in a given position.
func setShadowImage(UIImage?, forToolbarPosition: UIBarPosition)
Sets the image to use for the toolbar shadow in a given position.
See Also
Customizing appearance
var standardAppearance: UIToolbarAppearance
The appearance settings to use for a standard-height toolbar.
var compactAppearance: UIToolbarAppearance?
The appearance settings to use for a compact-height toolbar.
var scrollEdgeAppearance: UIToolbarAppearance?
The appearance settings for a standard-height toolbar when the edge of scrollable content aligns with the edge of the toolbar.
var compactScrollEdgeAppearance: UIToolbarAppearance?
The appearance settings for a compact-height toolbar when the edge of any scrollable content aligns with the edge of a compact-height toolbar.
var isTranslucent: Bool
A Boolean value that indicates whether the toolbar is translucent.